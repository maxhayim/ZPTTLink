name: Build & Test ZPTTLink

on:
  push:
    branches: [ main ]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  release:
    types: [created]

permissions:
  contents: read

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install build

      - name: Sanity check (CLI help)
        run: |
          python -m zpttlink --help

  build:
    name: Build distribution (sdist + wheel)
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install build tools and dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install build

      - name: Build package
        run: |
          python -m build
        env:
          # If your build reads version from tags, theyâ€™re available via GITHUB_REF on tag pushes.
          GITHUB_REF: ${{ github.ref }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zpttlink-dist
          path: dist/*

      - name: Attach artifacts to GitHub Release (when triggered by a Release or tag)
        if: github.event_name == 'release' || startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
